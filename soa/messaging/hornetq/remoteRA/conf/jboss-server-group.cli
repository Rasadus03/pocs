batch

#############################            configure full-ha profile to support hornetq brokers     ########################################
/profile=full-ha/subsystem=messaging/hornetq-server=default/jms-queue=${org.jboss.destinationName}/:add(entries=["queue/${org.jboss.destinationName}","java:jboss/exported/jms/queue/${org.jboss.destinationName}"],durable=true)
/profile=full-ha/subsystem=messaging/hornetq-server=default/address-setting=jms.queue.${org.jboss.destinationName}/:add(address-full-policy=PAGE,dead-letter-address=jms.queue.DLQ,last-value-queue=false,max-size-bytes=${org.hornetq.lab.max.size.bytes},page-size-bytes=${org.hornetq.lab.page.size.bytes},send-to-dla-on-no-route=false)
/profile=full-ha/subsystem=messaging/hornetq-server=default/:write-attribute(name=security-enabled,value=false)
/profile=full-ha/subsystem=messaging/hornetq-server=default/:write-attribute(name=message-counter-enabled,value=true)
/profile=full-ha/subsystem=messaging/hornetq-server=default/:write-attribute(name=jmx-management-enabled,value=true)
/profile=full-ha/subsystem=messaging/hornetq-server=default/:write-attribute(name=cluster-password,value=${hornetq.cluster.password})
/profile=full-ha/subsystem=messaging/hornetq-server=default/:write-attribute(name=failover-on-shutdown,value=true)

# make the RemoteConnectionFactory (used by remote clients via JNDI look up) HA
/profile=full-ha/subsystem=messaging/hornetq-server=default/connection-factory=RemoteConnectionFactory/:write-attribute(name=ha,value=true)
/profile=full-ha/subsystem=messaging/hornetq-server=default/connection-factory=RemoteConnectionFactory/:write-attribute(name=reconnect-attempts,value=-1)

/profile=full-ha/subsystem=messaging/hornetq-server=default/pooled-connection-factory=hornetq-ra/:write-attribute(name=reconnect-attempts,value=-1)
/profile=full-ha/subsystem=messaging/hornetq-server=default/pooled-connection-factory=hornetq-ra/:write-attribute(name=ha,value=true)

#  define 'lab-full-ha-group' which will include servers with embedded Hornetq
/server-group=lab-full-ha-group/:add(profile=full-ha,socket-binding-group=full-ha-sockets)
/server-group=lab-full-ha-group/system-property=jboss.messaging.group.address/:add(value=${jboss.messaging.group.address},boot-time=true)
/server-group=lab-full-ha-group/system-property=jboss.messaging.group.port/:add(value=${jboss.messaging.group.port},boot-time=true)
##########################################################################################################################################


#############################            configure full-ha-1 profile to support hornetq brokers     ########################################
/profile=full-ha-1/subsystem=messaging/hornetq-server=default/jms-queue=${org.jboss.destinationName}/:add(entries=["queue/${org.jboss.destinationName}","java:jboss/exported/jms/queue/${org.jboss.destinationName}"],durable=true)
/profile=full-ha-1/subsystem=messaging/hornetq-server=default/address-setting=jms.queue.${org.jboss.destinationName}/:add(address-full-policy=PAGE,dead-letter-address=jms.queue.DLQ,last-value-queue=false,max-size-bytes=${org.hornetq.lab.max.size.bytes},page-size-bytes=${org.hornetq.lab.page.size.bytes},send-to-dla-on-no-route=false)
/profile=full-ha-1/subsystem=messaging/hornetq-server=default/:write-attribute(name=security-enabled,value=false)
/profile=full-ha-1/subsystem=messaging/hornetq-server=default/:write-attribute(name=message-counter-enabled,value=true)
/profile=full-ha-1/subsystem=messaging/hornetq-server=default/:write-attribute(name=jmx-management-enabled,value=true)
/profile=full-ha-1/subsystem=messaging/hornetq-server=default/:write-attribute(name=cluster-password,value=${hornetq.cluster.password})
/profile=full-ha-1/subsystem=messaging/hornetq-server=default/:write-attribute(name=failover-on-shutdown,value=true)

# designate this profile as the backup
/profile=full-ha-1/subsystem=messaging/hornetq-server=default/:write-attribute(name=backup,value=true)

# make the RemoteConnectionFactory (used by remote clients via JNDI look up) HA
/profile=full-ha-1/subsystem=messaging/hornetq-server=default/connection-factory=RemoteConnectionFactory/:write-attribute(name=ha,value=true)
/profile=full-ha-1/subsystem=messaging/hornetq-server=default/connection-factory=RemoteConnectionFactory/:write-attribute(name=reconnect-attempts,value=-1)

/profile=full-ha-1/subsystem=messaging/hornetq-server=default/pooled-connection-factory=hornetq-ra/:write-attribute(name=reconnect-attempts,value=-1)
/profile=full-ha-1/subsystem=messaging/hornetq-server=default/pooled-connection-factory=hornetq-ra/:write-attribute(name=ha,value=true)

#  define 'lab-full-ha-group' which will include servers with embedded Hornetq
/server-group=lab-full-ha-1-group/:add(profile=full-ha-1,socket-binding-group=full-ha-sockets)
/server-group=lab-full-ha-1-group/system-property=jboss.messaging.group.address/:add(value=${jboss.messaging.group.address},boot-time=true)
/server-group=lab-full-ha-1-group/system-property=jboss.messaging.group.port/:add(value=${jboss.messaging.group.port},boot-time=true)
##########################################################################################################################################




###################################       configure full profile to support hosting of MDB          #######################################

#  temporary hack as per:  https://community.jboss.org/message/756775
/profile=full/subsystem=messaging/hornetq-server=default/:write-attribute(name=persistence-enabled,value=false)
/profile=full/subsystem=messaging/hornetq-server=default/:undefine-attribute(name=journal-file-size)
/profile=full/subsystem=messaging/hornetq-server=default/:undefine-attribute(name=journal-min-files)
/profile=full/subsystem=messaging/hornetq-server=default/address-setting=#/:remove
/profile=full/subsystem=messaging/hornetq-server=default/security-setting=#/:remove
/profile=full/subsystem=messaging/hornetq-server=default/connection-factory=InVmConnectionFactory/:remove
/profile=full/subsystem=messaging/hornetq-server=default/in-vm-acceptor=in-vm/:remove
/profile=full/subsystem=messaging/hornetq-server=default/in-vm-connector=in-vm/:remove
/profile=full/subsystem=messaging/hornetq-server=default/remote-acceptor=netty-throughput/:remove
/profile=full/subsystem=messaging/hornetq-server=default/remote-acceptor=netty/:remove
/profile=full/subsystem=messaging/hornetq-server=default/remote-connector=netty-throughput/:remove

#  define a discovery-group for the messaging subcomponent of the full profile
#  both hornetq-ra.rar as well as JMS connection factories will use this discovery-group rather than lookup via static IPs
/profile=full/subsystem=messaging/hornetq-server=default/discovery-group=dg-group1/:add(socket-binding=messaging-group,refresh-timeout=10000)

# change pooled connection factory to use discovery-group rather than immediately using a netty connectory
/profile=full/subsystem=messaging/hornetq-server=default/pooled-connection-factory=hornetq-ra/:undefine-attribute(name=connector)
/profile=full/subsystem=messaging/hornetq-server=default/pooled-connection-factory=hornetq-ra/:write-attribute(name=discovery-group-name,value=dg-group1)

# configure hornetq-ra for HA behavior
/profile=full/subsystem=messaging/hornetq-server=default/pooled-connection-factory=hornetq-ra/:write-attribute(name=ha,value=true)
/profile=full/subsystem=messaging/hornetq-server=default/pooled-connection-factory=hornetq-ra/:write-attribute(name=reconnect-attempts,value=-1)
/profile=full/subsystem=messaging/hornetq-server=default/pooled-connection-factory=hornetq-ra/:write-attribute(name=failover-on-server-shutdown,value=true)

# configure JMS connection factory avialable internally to beans;  ensure it uses correct discovery group and is HA
/profile=full/subsystem=messaging/hornetq-server=default/connection-factory=RemoteConnectionFactory/:undefine-attribute(name=connector)
/profile=full/subsystem=messaging/hornetq-server=default/connection-factory=RemoteConnectionFactory/:write-attribute(name=discovery-group-name,value=dg-group1)
/profile=full/subsystem=messaging/hornetq-server=default/connection-factory=RemoteConnectionFactory/:write-attribute(name=entries,value=["java:/RemoteConnectionFactory"])
/profile=full/subsystem=messaging/hornetq-server=default/connection-factory=RemoteConnectionFactory/:write-attribute(name=ha,value=true)
/profile=full/subsystem=messaging/hornetq-server=default/connection-factory=RemoteConnectionFactory/:write-attribute(name=reconnect-attempts,value=-1)

#  define '${lab.core.group}' which will include server(s) hosting MDBs 
/server-group=${lab.core.group}/:add(profile=full,socket-binding-group=full-sockets,socket-binding-port-offset=${lab.core.port.offset})
/server-group=${lab.core.group}/jvm=${lab.core.group}/:add(max-heap-size=1536m,env-classpath-ignored=false,permgen-size=64m,max-permgen-size=128m,heap-size=128m)
/server-group=${lab.core.group}/jvm=${lab.core.group}/:write-attribute(name=jvm-options,value=["-Xrunjdwp:transport=dt_socket,address=${lab.core.base.debugger.port},server=y,suspend=n"])
/server-group=${lab.core.group}/system-property=jboss.messaging.group.address/:add(value=${jboss.messaging.group.address},boot-time=true)
/server-group=${lab.core.group}/system-property=jboss.messaging.group.port/:add(value=${jboss.messaging.group.port},boot-time=true)

#  deploy MDBs to all servers in the ${lab.core.group} group
deploy target/${project.name}.jar --name=${project.name} --server-groups=${lab.core.group}
##########################################################################################################################################
#
run-batch
