if (outcome == success) of /deployment=sso-web0.war:read-resource
    undeploy sso-web0.war --all-relevant-server-groups
end-if
if (outcome == success) of /deployment=sso-web1.war:read-resource
    undeploy sso-web1.war --all-relevant-server-groups
end-if

batch

    ### enable trace level logging of the org.jboss.security.* package
    #/subsystem=logging/periodic-rotating-file-handler=FILE/:write-attribute(name=level,value=TRACE)
    #/subsystem=logging/logger=org.jboss.security/:add(category=org.jboss.security,level=TRACE,use-parent-handlers=true)

    #/subsystem=security/security-domain=${project.name}:add(cache-type=default)
    #/subsystem=security/security-domain=${project.name}/authentication=classic:add(login-modules=[{"code"=>"UsersRoles", "flag"=>"required", "module-options"=>[("usersProperties"=>"users.properties"),("rolesProperties"=>"roles.properties")]}])

    deploy target/sso-1.0-SNAPSHOT.war --name=sso-web0.war --server-groups=${lab.core.group}
    #deploy target/sso-1.0-SNAPSHOT.war --name=sso-web1.war --server-groups=${lab.core.group}
    /host=master/server-config=${organization.name}-0/:add(auto-start=false,group=${lab.core.group})

run-batch

batch
    /host=master/server-config=${organization.name}-0/:write-attribute(name=socket-binding-port-offset,value=${lab.core.port.offset})
    /host=master/server-config=${organization.name}-0/:start(server=${organization.name},blocking=true)
run-batch
